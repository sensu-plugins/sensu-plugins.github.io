<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sensu Plugins</title>
    <description>The home for all Sensu Official and Community plugins, handlers, extensions and mutators.
</description>
    <link>http://sensu-plugins.github.io/</link>
    <atom:link href="http://sensu-plugins.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 27 Jan 2015 09:42:29 -0500</pubDate>
    <lastBuildDate>Tue, 27 Jan 2015 09:42:29 -0500</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Welcome to new Sensu Plugins!</title>
        <description>&lt;p&gt;Welcome to the new Sensu Plugins website and repos!&lt;/p&gt;

&lt;p&gt;There are a lot changes dropping in the next few months and all of them should greatly benefit the community.  A few of the changes have already been made, this site being a major one.  The &lt;a href=&quot;http://sensu-plugins.github.io/contributing/&quot;&gt;Developer Guidelines&lt;/a&gt; have been updated to reflect some of the new features dropping over the next several months and the new policies that these bring.&lt;/p&gt;

&lt;p&gt;Before we get too deep into things let me assure you that there will be no forced upgrades, changes in license/functionality, or anything else to harm our precious, held-together-with-duct-tape-and-&lt;strike&gt;perl&lt;/strike&gt;ruby, monitors.  Sensu plugins was always designed to be an integral part of an open framework and that will not change.  What is going to change is the manner in which the plugins are written, test, built, and delivered.&lt;/p&gt;

&lt;p&gt;This has always been a community project built upon the hardwork and input of many people, sometimes though people don’t realize they can or should contribute.  This &lt;a href=&quot;http://sensu-plugins.github.io/sensu-plugins/issue/2015/01/27/sensu-plugins-roadmap.html&quot;&gt;post&lt;/a&gt; is a great example of how things will be done from now on.&lt;/p&gt;

&lt;h3 id=&quot;sensu-plugins-blog&quot;&gt;Sensu Plugins Blog&lt;/h3&gt;

&lt;p&gt;Whenever major changes are coming or hot issues, bugs, etc present themselves we can now create a simple blog post that gives an overview of the topic with a direct link back to the original post.  This post will be much more accesible then an Issue or a Pull Request buried among two dozen plus repos.  The RSS feed, for those that want to utilize it, will be ideal for keeping up with community developments and codebase changes.&lt;/p&gt;

&lt;h3 id=&quot;new-repositories&quot;&gt;New Repositories&lt;/h3&gt;

&lt;p&gt;Why so many repos?  One of the major changes, if not the main change, will be the splitting up of the &lt;a href=&quot;https://github.com/sensu/sensu-community-plugins&quot;&gt;Sensu Community Plugins&lt;/a&gt; repo in the many smaller repositories.  Extensions will be broken out completely into their own repository as well.  These repos will be organized by application and contain all plugins and handlers used by the application.  This will allow much more granular deployments and easier versioning.  It will no longer be necessary to bump the entire project for a simple typo in a single plugin.  &lt;a href=&quot;https://github.com/sensu/sensu-community-plugins/issues/985&quot;&gt;Issue 985&lt;/a&gt; has been created for this discussion.&lt;/p&gt;

&lt;h3 id=&quot;packaging&quot;&gt;Packaging&lt;/h3&gt;

&lt;p&gt;In the very near future each of these smaller repos will also be built into their own gem and released to RubyGems.  This will allow you to add ‘sensu-plugins-aws’ to your cookbook, manifest, or bundle and get either the latest version or a version of your choice.  At specific intervals throughout the year, the current thinking is quarterly, a meta-gem will be released containing the latest stable builds of every gem for those who would like to go the monolithic route.&lt;/p&gt;

&lt;p&gt;A user could also create their own met-gems if they would like, consisting of every gem needed for their own stack.&lt;/p&gt;

&lt;p&gt;The timeline, reasoning and further details can be found &lt;a href=&quot;http://sensu-plugins.github.io/sensu-plugins/issue/2015/01/27/sensu-plugins-roadmap.html&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://github.com/sensu/sensu-community-plugins/issues/847&quot;&gt;Issue 847&lt;/a&gt; but in a nutshell there will be ample time for people to transition to this new idea.  New features will continue to be accepted into the old repo till at least May 2015 while a build and release pipeline is stabilized.  Around this time the old repo will be frozen for all feature requests, but bug and security fixes will still be actively merged till at least June.  I stress this timeline is very movable and dependent on a lot of hard work by several people.&lt;/p&gt;

&lt;p&gt;When the community feels it is ready and has faith in the new pipeline and build process, the old repo will be hard frozen and archived in place.&lt;/p&gt;

&lt;h3 id=&quot;documentation&quot;&gt;Documentation&lt;/h3&gt;

&lt;p&gt;Documentation for the plugins will be automatically generated from RDoc sources, built into each gem and also served from a central location on this site.&lt;/p&gt;
</description>
        <pubDate>Mon, 26 Jan 2015 22:20:18 -0500</pubDate>
        <link>http://sensu-plugins.github.io/update/2015/01/26/welcome-to-sensu-plugins-new-home.html</link>
        <guid isPermaLink="true">http://sensu-plugins.github.io/update/2015/01/26/welcome-to-sensu-plugins-new-home.html</guid>
        
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Sensu Plugins Roadmap</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/sensu/sensu-community-plugins/issues/847&quot;&gt;Issue #847&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;abstract&quot;&gt;Abstract&lt;/h2&gt;
&lt;p&gt;Packaging and versioning of the plugins is something I know a lot of people want and for good reason.  I would like to purpose a thought and see how people feel about it. In a nutshell I would like to split the community-plugins repo in smaller repos, based upon application.  This would mean all the Windows plugins, handlers, etc would go into a repo named &lt;strong&gt;sensu-plugins-windows&lt;/strong&gt;, the aws ones would go to &lt;strong&gt;sensu-plugins-aws&lt;/strong&gt; and so one. Some projects already do this to some extent, specifically Hubot, and it presents many advantages.&lt;/p&gt;

&lt;h2 id=&quot;pros&quot;&gt;Pros&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Application groups are easier to package and version than a monolithic repository&lt;/li&gt;
  &lt;li&gt;Plugin groups could be installed by an automation tool or Sensu itself with ease and be dependent upon only those checks currently running&lt;/li&gt;
  &lt;li&gt;There would be no need to bump the entire plugins repo for a small change to a single plugin&lt;/li&gt;
  &lt;li&gt;A user could pin separate gem versions depending on their environment&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cons&quot;&gt;Cons&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;More overhead concerning dependency management&lt;/li&gt;
  &lt;li&gt;More jobs to create and manage&lt;/li&gt;
  &lt;li&gt;Plugin groups may not work for everyone&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For those that want things the way they are we will create quarterly meta-gem releases of all the various gems, and these can be considered stable, whereas the individual gems could be considered production grade but active and the meta-gem would get built from each of these. This paves the way for company’s to create specific gemsets for only the software they run. For example a lamp stack meta-gem would consist of core(system), mysql, and apache.&lt;/p&gt;

&lt;p&gt;Dependency management could be somewhat solved over time as the community builds custom meta sets and such that all rely on a single dependency version, as they pin their version and run the included integration tests, if they pass then they could submit a PR back and we could bump the dependency for that specific gem.&lt;/p&gt;

&lt;h2 id=&quot;proposed-timeframe&quot;&gt;Proposed Timeframe&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;February (Creation)&lt;/li&gt;
  &lt;li&gt;Split all repos&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create gems for each repo as they currently stand&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;March - April (Transition Period)&lt;/li&gt;
  &lt;li&gt;Maintain both architectures&lt;/li&gt;
  &lt;li&gt;Accept pull requests from &lt;strong&gt;sensu-community-plugins&lt;/strong&gt; repo and new repos&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create build schedule and pipeline for new gems&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;May (Start cutover)&lt;/li&gt;
  &lt;li&gt;Stop accepting PR’s and issues for &lt;strong&gt;sensu-community-plugins&lt;/strong&gt; repo for new functionality (bugs and security fixes still allowed)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Maintain desired build schedule for all new gems&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;June (End cutover)&lt;/li&gt;
  &lt;li&gt;Freeze &lt;strong&gt;sensu-community-plugins&lt;/strong&gt; repo and stop accepting all PR’s and Issues&lt;/li&gt;
  &lt;li&gt;Maintain desired build schedule for all new gems&lt;/li&gt;
  &lt;li&gt;Create first unstable release of meta-gem package&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 26 Jan 2015 22:20:18 -0500</pubDate>
        <link>http://sensu-plugins.github.io/issue/2015/01/26/sensu-plugins-roadmap.html</link>
        <guid isPermaLink="true">http://sensu-plugins.github.io/issue/2015/01/26/sensu-plugins-roadmap.html</guid>
        
        
        <category>issue</category>
        
      </item>
    
  </channel>
</rss>
